Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.

You must not use any built-in exponent function or operator.

For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.

class Solution:
    def mySqrt(self, x: int) -> int:
        l = 0
        r = x
        while l<=r:
            mid = l+(r-l)//2
            if mid*mid <=x < (mid+1)*(mid+1):
                return mid
            elif x < mid*mid:
                r = mid - 1
            else:
                l = mid +1
